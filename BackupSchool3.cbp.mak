#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#

# need the same complier as was used to compile the library
PATH = ..\\extra\\CodeBlocks\\MinGW\\bin;%PATH%;
WORKDIR = %cd%

CC = gcc.exe
CXX = g++.exe
AR = ar.exe
LD = g++.exe
WINDRES = windres.exe
WX = ..\\..\\lib\\wxWidgets-3.0.2

INC = -I$(WX)\\include
CFLAGS = -Wall -std=c++11 -pipe -mthreads -Winvalid-pch -include wx_pch.h -D__GNUWIN32__ -D__WXMSW__ -DWXUSINGDLL -DwxUSE_UNICODE -DWX_PRECOMP
LDFLAGS = -static-libstdc++ -mthreads

INC_DEBUG = $(INC) -I$(WX)\\lib\\gcc_dll\\mswu
CFLAGS_DEBUG = $(CFLAGS) -std=c++11 -g
RESINC_DEBUG = $(RESINC) -I$(WX)\\lib\\gcc_dll\\mswu
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR) -L$(WX)\\lib\\gcc_dll
LIB_DEBUG = $(LIB)-lwxmsw30u_core -lwxbase30u -lwxpng -lwxzlib "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.15063.0\\um\\x86\\WinMM.Lib"
LDFLAGS_DEBUG =  -shared-libgcc  $(LDFLAGS)
OBJDIR_DEBUG = obj\\Debug
OUT_DEBUG = bin\\Debug\\BackupSchool3.exe

INC_RELEASE = $(INC) -I$(WX)\\lib\\gcc_dll\\mswu
CFLAGS_RELEASE = $(CFLAGS) -O2 -std=c++11
RESINC_RELEASE = $(RESINC) -I$(WX)\\lib\\gcc_dll\\mswu
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR) -L$(WX)\\lib\\gcc_dll
LIB_RELEASE = $(LIB)-lwxmsw30u_core -lwxbase30u -lwxpng -lwxzlib "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.15063.0\\um\\x86\\WinMM.Lib"
LDFLAGS_RELEASE =  -s  -shared-libgcc $(LDFLAGS)
OBJDIR_RELEASE = obj\\Release
OUT_RELEASE = bin\\Release\\BackupSchool.exe

OBJ_DEBUG = $(OBJDIR_DEBUG)\\BackupSchool3App.o $(OBJDIR_DEBUG)\\BackupSchool3Main.o $(OBJDIR_DEBUG)\\resource.o

OBJ_RELEASE = $(OBJDIR_RELEASE)\\BackupSchool3App.o $(OBJDIR_RELEASE)\\BackupSchool3Main.o $(OBJDIR_RELEASE)\\resource.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	if [[ ! -d bin\\Debug ]]; then mkdir bin\\Debug; fi;
	if [[ ! -d $(OBJDIR_DEBUG) ]]; then mkdir $(OBJDIR_DEBUG); fi

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) -mwindows $(LIB_DEBUG)

$(OBJDIR_DEBUG)\\BackupSchool3App.o: BackupSchool3App.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c BackupSchool3App.cpp -o $(OBJDIR_DEBUG)\\BackupSchool3App.o

$(OBJDIR_DEBUG)\\BackupSchool3Main.o: BackupSchool3Main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c BackupSchool3Main.cpp -o $(OBJDIR_DEBUG)\\BackupSchool3Main.o

$(OBJDIR_DEBUG)\\resource.o: resource.rc
	$(WINDRES) -i resource.rc -J rc -o $(OBJDIR_DEBUG)\\resource.o -O coff $(INC_DEBUG)

clean_debug: 
	cmd /c del /f $(OBJ_DEBUG) $(OUT_DEBUG)
	cmd /c rd bin\\Debug
	cmd /c rd $(OBJDIR_DEBUG)

before_release: 
	cmd /c if not exist bin\\Release md bin\\Release
	cmd /c if not exist $(OBJDIR_RELEASE) md $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) -mwindows $(LIB_RELEASE)

$(OBJDIR_RELEASE)\\BackupSchool3App.o: BackupSchool3App.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c BackupSchool3App.cpp -o $(OBJDIR_RELEASE)\\BackupSchool3App.o

$(OBJDIR_RELEASE)\\BackupSchool3Main.o: BackupSchool3Main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c BackupSchool3Main.cpp -o $(OBJDIR_RELEASE)\\BackupSchool3Main.o

$(OBJDIR_RELEASE)\\resource.o: resource.rc
	$(WINDRES) -i resource.rc -J rc -o $(OBJDIR_RELEASE)\\resource.o -O coff $(INC_RELEASE)

clean_release: 
	cmd /c del /f $(OBJ_RELEASE) $(OUT_RELEASE)
	cmd /c rd bin\\Release
	cmd /c rd $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

